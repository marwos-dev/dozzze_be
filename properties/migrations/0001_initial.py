# Generated by Django 5.2.1 on 2025-05-15 23:07

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import properties.models
import storages.backends.s3
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('zones', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('description', models.TextField(verbose_name='Descripcion')),
                ('address', models.CharField(max_length=255, verbose_name='Dirección')),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326, verbose_name='Ubicación')),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('cover_image', models.ImageField(blank=True, null=True, storage=storages.backends.s3.S3Storage(), upload_to=properties.models.property_cover_image_upload_path, verbose_name='Imagen')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='zones.zone', verbose_name='Zona')),
            ],
            options={
                'verbose_name': 'Propiedad',
                'verbose_name_plural': 'Propiedades',
                'db_table': 'properties',
                'ordering': ['-created_at'],
                'unique_together': {('name', 'address')},
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(storage=storages.backends.s3.S3Storage(), upload_to=properties.models.property_image_upload_path, verbose_name='Imagen')),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='Descripción')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='properties.property', verbose_name='Zona')),
            ],
            options={
                'verbose_name': 'Imagen de Propiedad',
                'verbose_name_plural': 'Imágenes de Propiedades',
                'db_table': 'property_images',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('apartment', 'Apartment'), ('studio', 'Studio'), ('duplex', 'Duplex')], max_length=20, verbose_name='Tipo')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('pax', models.PositiveIntegerField()),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='properties.property')),
            ],
            options={
                'verbose_name': 'Habitación',
                'verbose_name_plural': 'Habitaciones',
                'db_table': 'rooms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RoomImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=properties.models.room_image_upload_path)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='properties.room')),
            ],
            options={
                'verbose_name': 'Imagen de Habitación',
                'verbose_name_plural': 'Imágenes de Habitaciones',
                'db_table': 'room_images',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
                'db_table': 'services',
                'ordering': ['name'],
                'unique_together': {('name',)},
            },
        ),
        migrations.AddField(
            model_name='room',
            name='services',
            field=models.ManyToManyField(blank=True, to='properties.service'),
        ),
        migrations.CreateModel(
            name='CommunicationMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communication_methods', to='properties.property')),
            ],
            options={
                'verbose_name': 'Método de Comunicación',
                'verbose_name_plural': 'Métodos de Comunicación',
                'db_table': 'communication_methods',
                'ordering': ['name'],
                'unique_together': {('property', 'name')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('name', 'property')},
        ),
    ]
