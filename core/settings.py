"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path

from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
GDAL_LIBRARY_PATH = os.getenv("GDAL_LIBRARY_PATH", "/opt/homebrew/lib/libgdal.dylib")
GEOS_LIBRARY_PATH = os.getenv("GEOS_LIBRARY_PATH", "/opt/homebrew/lib/libgeos_c.dylib")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-(y4si_+axe6qoukrek*a=nfzc97!6d&m6p^&re&)v*m4c)b@3n"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


INSTALLED_APPS = [
    "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "storages",
    "django.contrib.gis",
    "corsheaders",
    "django_celery_beat",
]

LOCAL_APPS = [
    "properties",
    "reservations",
    "zones",
    "pms",
    "customers",
]

INSTALLED_APPS += LOCAL_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://192.168.0.46:3000",
    "http://181.169.99.158:3000",
    "https://www.marwos.online",
    "https://dozzze-cmy18blmi-marwos-projects.vercel.app",
]
CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.contrib.gis.db.backends.postgis",
        "NAME": os.getenv("DB_NAME", "mtr2"),
        "USER": os.getenv("DB_USER", "marcosolmedo"),
        "PASSWORD": os.getenv("DB_PASSWORD", "40575526"),
        "HOST": os.getenv("DB_HOST", "localhost"),
        "PORT": os.getenv("DB_PORT", "5432"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "es"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
# Eliminalo en producción 👇
# STATICFILES_DIRS = [...]


STATIC_URL = "static/"
STATICFILES_DIRS = ["static/"]
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Configuración para usar Amazon S3
DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

# Configuración de Amazon S3
AWS_S3_REGION_NAME = os.getenv("AWS_S3_REGION_NAME")  # o la región que uses
AWS_QUERYSTRING_AUTH = False  # para que los links no tengan tokens de expiración
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None  # necesario en algunas configuraciones nuevas
AWS_S3_SIGNATURE_VERSION = "s3v4"

AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = os.getenv("AWS_STORAGE_BUCKET_NAME")
MEDIA_URL = f"https://{AWS_STORAGE_BUCKET_NAME}.s3.us-east-1.amazonaws.com/"

# Frontend secret token
MY_FRONTEND_SECRET_TOKEN = os.getenv("MY_FRONTEND_SECRET_TOKEN")

# Configuración de Jazzmin para el panel de administración
JAZZMIN_SETTINGS = {
    "bootstrap_version": "5",
    "site_logo": "images/logo.png",  # logo para el admin
    "site_icon": "images/favicon.png",
    "site_title": "Admin Panel",
    "site_header": "Panel Administrativo DOZZZE",
    "site_brand": "DOZZZE",
    "welcome_sign": "Bienvenido al panel de administración",
    "copyright": "DOZZZE",
    "order_with_respect_to": [
        "auth.User",  # User Menu
        "auth.Group",
        "zones.Zone",  # Zone Menu
        "properties.Property",  # Property Menu
        "properties.Room",
        "properties.Service",
        "properties.CommunicationMethod",
    ],
    "custom_css": "css/admin_custom.css",
    # "theme": "flatly",
    "changeform_format": "horizontal_tabs",
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.User": "fas fa-user",
        "auth.Group": "fas fa-users",
        "zones.Zone": "fas fa-map-marked-alt",
        "properties.Property": "fas fa-building",
        "reservations.Reservartion": "fas fa-calendar-check",
        "properties.Room": "fas fa-door-open",
        "properties.CommunicationMethod": "fas fa-comment-dots",
        "properties.Service": "fas fa-concierge-bell",
    },
}

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
CSRF_TRUSTED_ORIGINS = [
    "https://dozzzebe-production.up.railway.app",
]

# Celery
CELERY_BROKER_URL = os.getenv("CELERY_BROKER_URL", "redis://localhost:6379/0")
CELERY_RESULT_BACKEND = os.getenv("CELERY_RESULT_BACKEND", "redis://localhost:6379/0")
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers.DatabaseScheduler"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    )
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "AUTH_HEADER_TYPES": ("Bearer",),
}

PUBLIC_API_KEY = os.getenv("PUBLIC_API_KEY", "clave-larga-y-unica")

DEVELOPMENT = os.getenv("DEVELOPMENT", "false").lower() in ("true", "1", "yes")

# EMAIL
EMAIL_BACKEND = (
    "django.core.mail.backends.smtp.EmailBackend"
    if not DEVELOPMENT
    else "django.core.mail.backends.console.EmailBackend"
)
EMAIL_HOST = os.getenv("EMAIL_HOST", "smtp.gmail.com")
EMAIL_PORT = int(os.getenv("EMAIL_PORT", "587"))
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER", "marwos97@gmail.com")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD", "gyon atra pibn vhsc")
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL", "marwos97@gmail.com")

FRONTEND_URL = os.getenv("FRONTEND_URL", "http://localhost:3000")
BACKEND_URL = os.getenv("BACKEND_URL", "http://127.0.0.1:8000")

# Redsys configuration
REDSYS_MERCHANT_CODE = int(os.getenv("REDSYS_MERCHANT_CODE", 263100000))
REDSYS_TERMINAL = int(os.getenv("REDSYS_TERMINAL", 19))
REDSYS_SECRET_KEY = os.getenv("REDSYS_SECRET_KEY", "sq7HjrUOBfKmC576ILgskD5srU870gJ7")
REDSYS_URL = os.getenv("REDSYS_URL", "https://sis-t.redsys.es:25443/sis/realizarPago")


ALLOWED_HOSTS = [
    "dozzzebe-production.up.railway.app",
    "web.motor-reservas.orb.local",
    "localhost",
    "127.0.0.1",
    "d77f-79-116-14-191.ngrok-free.app",
]