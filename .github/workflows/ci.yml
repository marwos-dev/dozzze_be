name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  ENV: test
on:
  push:
    paths-ignore: [ "docs/**" ]

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11.0
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.0

      # Run all pre-commit hooks on all the files.
      # Getting only staged files can be tricky in case a new PR is opened
      # since the action is run on a branch in detached head state
      - name: Install and Run Pre-commit
        uses: pre-commit/action@v3.0.0

  tests:
    runs-on: ubuntu-latest
    needs: lint-backend
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: motor_reserva
          POSTGRES_PASSWORD: motor_reserva
          POSTGRES_DB: motor_reservas
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U motor_reserva"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DB_NAME: motor_reservas
      DB_USER: motor_reserva
      DB_PASSWORD: motor_reserva
      DB_HOST: localhost
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://localhost:6379/0
      CELERY_RESULT_BACKEND: redis://localhost:6379/0
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev libgeos-dev libproj-dev libpq-dev

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Apply migrations
        run: python manage.py migrate --noinput

      - name: Run tests
        run: python manage.py test
